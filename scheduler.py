# -*- coding: utf-8 -*-
"""
–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–Ω–µ–π
"""

from datetime import datetime
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from aiogram import Bot
import keyboards
from database import db


async def send_daily_reminder(bot: Bot):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤ 09:00"""
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    conn = db.get_connection()
    cursor = conn.cursor()
    cursor.execute('SELECT user_id, current_day FROM users WHERE current_day < 22')
    users = cursor.fetchall()
    conn.close()
    
    for user in users:
        user_id = user['user_id']
        current_day = user['current_day']
        next_day = current_day + 1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–ø–æ–ª–Ω–µ–Ω –ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
        # (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É)
        
        try:
            await bot.send_message(
                user_id,
                f"üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! \n\n"
                f"–°–µ–≥–æ–¥–Ω—è —Ç–µ–±—è –∂–¥—ë—Ç –î–µ–Ω—å {next_day} –∏–Ω—Ç–µ–Ω—Å–∏–≤–∞! üî•\n\n"
                f"–ì–æ—Ç–æ–≤–∞ –∫ –Ω–æ–≤—ã–º —Å–≤–µ—Ä—à–µ–Ω–∏—è–º?",
                reply_markup=keyboards.get_next_day_keyboard(current_day)
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


def setup_scheduler(bot: Bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    scheduler = AsyncIOScheduler()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 09:00
    scheduler.add_job(
        send_daily_reminder,
        'cron',
        hour=9,
        minute=0,
        args=[bot]
    )
    
    return scheduler

