from PIL import Image, ImageDraw, ImageFont
from datetime import datetime
import os


def generate_certificate(full_name, user_id=None, output_dir="certificates"):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    
    Args:
        full_name (str): –ü–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ò–º—è –§–∞–º–∏–ª–∏—è)
        user_id (int/str): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        output_dir (str): –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    
    Returns:
        str: –ü—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É
    """
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —à–∞–±–ª–æ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    template_path = "Sertificate.png"
    
    try:
        img = Image.open(template_path)
    except FileNotFoundError:
        raise FileNotFoundError(f"–®–∞–±–ª–æ–Ω '{template_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ.")
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
    draw = ImageDraw.Draw(img)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    img_width, img_height = img.size
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —à—Ä–∏—Ñ—Ç (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
    font_size_name = 45
    font_size_date = 35
    
    try:
        # –î–ª—è Windows
        font_name = ImageFont.truetype("arial.ttf", font_size_name)
        font_date = ImageFont.truetype("arial.ttf", font_size_date)
    except:
        try:
            # –î–ª—è Linux
            font_name = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf", font_size_name)
            font_date = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", font_size_date)
        except:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
            print("‚ö†Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π")
            font_name = ImageFont.load_default()
            font_date = ImageFont.load_default()
    
    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –∏–º–µ–Ω–∏ (–≤–µ—Ä—Ö–Ω–∏–π —Ç–µ–º–Ω—ã–π –±–ª–æ–∫)
    # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ —Ü–µ–Ω—Ç—Ä—É –≤–µ—Ä—Ö–Ω–µ–≥–æ –±–ª–æ–∫–∞
    name_y = 232
    
    # –í—ã—á–∏—Å–ª—è–µ–º —à–∏—Ä–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
    bbox_name = draw.textbbox((0, 0), full_name, font=font_name)
    text_width_name = bbox_name[2] - bbox_name[0]
    name_x = (img_width - text_width_name) // 2
    
    # –†–∏—Å—É–µ–º –∏–º—è (–±–µ–ª—ã–π —Ü–≤–µ—Ç)
    draw.text((name_x, name_y), full_name, fill=(255, 255, 255), font=font_name)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞—Ç—É
    current_date = datetime.now()
    date_text = current_date.strftime("%d.%m.%Y")
    
    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –¥–∞—Ç—ã (–Ω–∏–∂–Ω–∏–π —Ç–µ–º–Ω—ã–π –±–ª–æ–∫)
    date_y = 507
    
    # –í—ã—á–∏—Å–ª—è–µ–º —à–∏—Ä–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –¥–∞—Ç—ã –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
    bbox_date = draw.textbbox((0, 0), date_text, font=font_date)
    text_width_date = bbox_date[2] - bbox_date[0]
    date_x = (img_width - text_width_date) // 2
    
    # –†–∏—Å—É–µ–º –¥–∞—Ç—É (–±–µ–ª—ã–π —Ü–≤–µ—Ç)
    draw.text((date_x, date_y), date_text, fill=(255, 255, 255), font=font_date)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if user_id:
        output_filename = f"certificate_{user_id}_{current_date.strftime('%Y%m%d_%H%M%S')}.png"
    else:
        # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏–∑ –∏–º–µ–Ω–∏ –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        safe_name = full_name.replace(" ", "_")
        output_filename = f"certificate_{safe_name}_{current_date.strftime('%Y%m%d_%H%M%S')}.png"
    
    output_path = os.path.join(output_dir, output_filename)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    img.save(output_path, quality=95)
    
    print(f"‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {output_path}")
    return output_path


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å SQLite
def generate_certificate_from_db(cursor, user_id):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    
    Args:
        cursor: –ö—É—Ä—Å–æ—Ä SQLite
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    
    Returns:
        str: –ü—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É –∏–ª–∏ None –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    """
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    cursor.execute("SELECT first_name, last_name FROM users WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    
    if result:
        first_name, last_name = result
        full_name = f"{first_name} {last_name}" if last_name else first_name
        
        return generate_certificate(full_name, user_id)
    else:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return None


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    print("=" * 60)
    print("üéì –ì–ï–ù–ï–†–ê–¢–û–† –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í")
    print("=" * 60)
    
    # –ü—Ä–∏–º–µ—Ä 1: –ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
    try:
        certificate_path = generate_certificate("–ù–∞—Ç–∞—à–∞ –î–µ–ª–∞–π–¢–µ–ª–æ")
        print(f"\nüìÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {certificate_path}")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    
    # –ü—Ä–∏–º–µ—Ä 2: –° —É–∫–∞–∑–∞–Ω–∏–µ–º user_id
    try:
        certificate_path = generate_certificate("–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", user_id=12345)
        print(f"\nüìÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {certificate_path}")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    print("‚ú® –ì–æ—Ç–æ–≤–æ!")
    print("=" * 60)