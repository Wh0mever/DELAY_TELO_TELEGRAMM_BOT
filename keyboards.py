# -*- coding: utf-8 -*-
"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def get_start_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ (–î–µ–Ω—å 0)"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ö–ê–ö –í–°–Å –£–°–¢–†–û–ï–ù–û", callback_data="how_it_works")]
    ])
    return keyboard


def get_steps_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–≤—ã—Ö —à–∞–≥–æ–≤"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–ï–†–í–´–ï –ü–†–û–°–¢–´–ï –®–ê–ì–ò üëá", callback_data="first_steps")]
    ])
    return keyboard


def get_ready_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –Ω–∞—á–∞—Ç—å"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ì–û–¢–û–í–ê –ù–ê–ß–ê–¢–¨", callback_data="ready_to_start")]
    ])
    return keyboard


def get_week_start_keyboard(week: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–¥–µ–ª–∏"""
    if week == 1:
        callback = "start_day_1"
        text = "üöÄ –ü–ï–†–ï–ô–¢–ò –ö 1 –î–ù–Æ"
    elif week == 2:
        callback = "start_day_8"
        text = "üöÄ –ü–ï–†–ï–ô–¢–ò –ö –î–ù–Æ 8"
    else:  # week 3
        callback = "start_day_15"
        text = "üöÄ –î–ï–ù–¨ 15"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=text, callback_data=callback)]
    ])
    return keyboard


def get_workout_keyboard(day: int, has_skip: bool = True):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –¥–Ω–µ–π"""
    buttons = [
        [InlineKeyboardButton(text="‚úÖ –í–´–ü–û–õ–ù–ò–õ–ê", callback_data=f"completed_workout_{day}")]
    ]
    if has_skip:
        buttons.append([InlineKeyboardButton(text="‚ùå –ü–†–û–ü–£–°–ö–ê–Æ", callback_data=f"skip_day_{day}")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_task_keyboard(day: int, has_skip: bool = True):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–Ω–µ–π —Å –∑–∞–¥–∞–Ω–∏—è–º–∏"""
    buttons = [
        [InlineKeyboardButton(text="‚úçÔ∏è –°–î–ï–õ–ê–ù–û", callback_data=f"completed_task_{day}")]
    ]
    if has_skip:
        buttons.append([InlineKeyboardButton(text="‚ùå –ü–†–û–ü–£–°–ö–ê–Æ", callback_data=f"skip_day_{day}")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_next_day_keyboard(day: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é"""
    day_names = {
        1: "üåø –î–ï–ù–¨ 2",
        2: "üí™ –î–ï–ù–¨ 3",
        3: "üå∏ –î–ï–ù–¨ 4",
        4: "üçë –î–ï–ù–¨ 5",
        5: "ü•ë –î–ï–ù–¨ 6",
        6: "üíÉ –î–ï–ù–¨ 7",
        7: "‚ú® –ù–ï–î–ï–õ–Ø 2",
        8: "ü•ë –î–ï–ù–¨ 9",
        9: "üî• –î–ï–ù–¨ 10",
        10: "ü•® –î–ï–ù–¨ 11",
        11: "üî• –î–ï–ù–¨ 12",
        12: "ü•ó –î–ï–ù–¨ 13",
        13: "üî• –î–ï–ù–¨ 14",
        14: "‚ú® –ù–ï–î–ï–õ–Ø 3",
        15: "‚ú® –î–ï–ù–¨ 16",
        16: "üî• –î–ï–ù–¨ 17",
        17: "‚ú® –î–ï–ù–¨ 18",
        18: "üí´ –î–ï–ù–¨ 19",
        19: "‚ú® –î–ï–ù–¨ 20",
        20: "üíÉ –î–ï–ù–¨ 21",
        21: "‚ú® –ü–û–î–í–ï–î–ï–ù–ò–ï –ò–¢–û–ì–û–í"
    }
    
    text = day_names.get(day, f"–î–ï–ù–¨ {day + 1}")
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=text, callback_data=f"start_day_{day + 1}")]
    ])
    return keyboard


def get_demo_calendar_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–º–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÖ –ü–û–õ–£–ß–ò–¢–¨ –î–ï–ú–û –ö–ê–õ–ï–ù–î–ê–†–ò–ö!", callback_data="get_demo_calendar")]
    ])
    return keyboard


def get_upload_photo_keyboard(photo_type: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ"""
    text = "üì∏ –ó–ê–ì–†–£–ó–ò–¢–¨ –§–û–¢–û '–ü–û–°–õ–ï'" if photo_type == "after" else "üì∏ –ó–ê–ì–†–£–ó–ò–¢–¨ –§–û–¢–û '–î–û'"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=text, callback_data=f"upload_photo_{photo_type}")]
    ])
    return keyboard


def get_certificate_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéì –ó–ê–ë–†–ê–¢–¨ –°–ï–†–¢–ò–§–ò–ö–ê–¢", callback_data="get_certificate")]
    ])
    return keyboard


def get_main_menu_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="my_profile")],
        [InlineKeyboardButton(text="üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å", callback_data="my_progress")],
        [InlineKeyboardButton(text="üì∏ –ú–æ—ë —Ñ–æ—Ç–æ –î–û", callback_data="my_photo_before")],
        [InlineKeyboardButton(text="üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="schedule")],
        [InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")]
    ])
    return keyboard


def get_back_to_menu_keyboard():
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    return keyboard

