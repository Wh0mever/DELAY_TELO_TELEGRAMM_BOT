# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è Telegram –±–æ—Ç–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–º–µ—Ä—ã –∏ —Ñ–æ—Ä–º–∞—Ç –≤—Å–µ—Ö —Ñ–æ—Ç–æ –∏–∑ config
"""

import os
from PIL import Image
import config

def check_photo(path, name):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ"""
    if not os.path.exists(path):
        print(f"‚ùå {name}: –§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù")
        print(f"   –ü—É—Ç—å: {path}")
        return False
    
    try:
        with Image.open(path) as img:
            width, height = img.size
            file_size = os.path.getsize(path) / (1024 * 1024)  # MB
            
            # Telegram —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
            # - –ú–∏–Ω–∏–º—É–º: 1x1 –ø–∏–∫—Å–µ–ª–µ–π
            # - –ú–∞–∫—Å–∏–º—É–º: –æ–¥–Ω–∞ –∏–∑ —Å—Ç–æ—Ä–æ–Ω –Ω–µ –±–æ–ª—å—à–µ 10000 –ø–∏–∫—Å–µ–ª–µ–π
            # - –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: –¥–æ 10 –ú–ë
            
            is_ok = True
            issues = []
            
            if width < 1 or height < 1:
                is_ok = False
                issues.append("–†–∞–∑–º–µ—Ä –º–µ–Ω—å—à–µ 1x1 –ø–∏–∫—Å–µ–ª–µ–π")
            
            if width > 10000 or height > 10000:
                is_ok = False
                issues.append(f"–†–∞–∑–º–µ—Ä {width}x{height} (–º–∞–∫—Å 10000 –ø–∏–∫—Å–µ–ª–µ–π)")
            
            if file_size > 10:
                is_ok = False
                issues.append(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ {file_size:.2f} MB (–º–∞–∫—Å 10 MB)")
            
            if is_ok:
                print(f"‚úÖ {name}: {width}x{height}, {file_size:.2f} MB, {img.format}")
                return True
            else:
                print(f"‚ö†Ô∏è {name}: –ü–†–û–ë–õ–ï–ú–ê!")
                print(f"   –†–∞–∑–º–µ—Ä: {width}x{height}")
                print(f"   –§–∞–π–ª: {file_size:.2f} MB")
                print(f"   –§–æ—Ä–º–∞—Ç: {img.format}")
                for issue in issues:
                    print(f"   ‚ùå {issue}")
                return False
                
    except Exception as e:
        print(f"‚ùå {name}: –û–®–ò–ë–ö–ê –ß–¢–ï–ù–ò–Ø")
        print(f"   {e}")
        return False


def main():
    print("=" * 60)
    print("–ü–†–û–í–ï–†–ö–ê –§–û–¢–û–ì–†–ê–§–ò–ô –î–õ–Ø TELEGRAM –ë–û–¢–ê")
    print("=" * 60)
    print()
    
    all_ok = True
    
    print("üì∑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–æ—Ç–æ:")
    print("-" * 60)
    for num, path in config.PHOTOS.items():
        if not check_photo(path, f"–§–æ—Ç–æ {num}"):
            all_ok = False
    
    print()
    print("=" * 60)
    
    if all_ok:
        print("‚úÖ –í–°–ï –§–û–¢–û –í –ü–û–†–Ø–î–ö–ï!")
    else:
        print("‚ö†Ô∏è –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–ù–´–ï –§–û–¢–û!")
        print()
        print("üîß –ß—Ç–æ –¥–µ–ª–∞—Ç—å:")
        print("1. –ü–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ–æ—Ç–æ –≤ JPEG –∏–ª–∏ PNG")
        print("2. –£–º–µ–Ω—å—à–∏—Ç–µ —Ä–∞–∑–º–µ—Ä, –µ—Å–ª–∏ –±–æ–ª—å—à–µ 10000 –ø–∏–∫—Å–µ–ª–µ–π")
        print("3. –°–æ–∂–º–∏—Ç–µ —Ñ–∞–π–ª, –µ—Å–ª–∏ –±–æ–ª—å—à–µ 10 –ú–ë")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ä–∞–∑–º–µ—Ä –Ω–µ –º–µ–Ω—å—à–µ 1x1 –ø–∏–∫—Å–µ–ª–µ–π")
    
    print("=" * 60)


if __name__ == "__main__":
    main()

